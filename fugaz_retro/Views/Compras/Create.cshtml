@model fugaz_retro.Models.Compra

@{
    ViewData["Title"] = "Crear Compra";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="tbl">
    <h1>@ViewData["Title"]</h1>
    <hr />
    <div class="container">
        <form asp-action="Create" id="createForm" method="post">
            <div class="row">
                <div class="row">
                    <!-- Columna 1: Fecha de Compra -->
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="FechaCompra" class="control-label">Fecha de Compra</label>
                            <input asp-for="FechaCompra" type="date" class="form-control" id="fechaCompra" />
                            <span asp-validation-for="FechaCompra" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Columna 2: Tipo de Proveedor -->
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="TipoProveedor">Tipo de Proveedor</label>
                            <select id="TipoProveedor" class="form-control">
                                <option value="">Selecciona tipo de proveedor</option>
                                <option value="Jurídico">Jurídico</option>
                                <option value="Natural">Natural</option>
                            </select>
                        </div>
                    </div>

                    <!-- Columna 3: Proveedor -->
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="IdProveedor" class="control-label">Proveedor</label>
                            <select asp-for="IdProveedor" class="form-control" id="IdProveedor"></select>
                        </div>
                    </div>
                </div>

            <div class="border border-secondary border-3 rounded p-4 bg-light shadow-sm mt-4">
                <h3 class="mb-4">Detalles de la Compra</h3>

                <!-- Fila para ingresar los detalles -->
                <div class="row mb-3">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="insumo">Insumo</label>
                            <select id="insumo" class="form-control">
                                <option value="">Selecciona insumo</option>
                                @foreach (var insumo in ViewBag.Insumos)
                                {
                                    <option value="@insumo.IdInsumo">@insumo.NombreInsumo</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="cantidad">Cantidad</label>
                            <input type="text" id="cantidad" class="form-control" placeholder="Cantidad" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="unidadMedida">Unidad de Medida</label>
                            <select id="unidadMedida" class="form-control">
                                <option value="">Selecciona unidad de medida</option>
                                <option value="Metros">Metros</option>
                                <option value="Centímetros">Centímetros</option>
                                <option value="Yardas-2000">Yardas - 2000</option>
                                <option value="Yardas-5000">Yardas - 5000</option>
                                <option value="Docena">Docena</option>
                            </select>
                        </div>
                    </div>
                      
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="precioUnitario">Precio Unitario</label>
                            <input type="number" id="precioUnitario" class="form-control" step="0.01" placeholder="Precio Unitario" />
                        </div>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="button" class="btn btn-primary w-60" onclick="agregarDetalle()">Agregar Detalle</button>
                    </div>
                </div>

                <!-- Tabla donde se agregarán los detalles -->
                <div class="table-responsive">
                    <table id="detallesTable" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Insumo</th>
                                <th>Cantidad</th>
                                <th>Unidad de Medida</th>
                                <th>Precio Unitario</th>
                                <th>Subtotal</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Aquí se agregarán dinámicamente los detalles -->
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="row">
                <!-- Columna 1: Fecha de Compra -->
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="Subtotal" class="control-label">Subtotal</label>
                            <input asp-for="Subtotal" id="subtotal" class="form-control" readonly />
                            <span asp-validation-for="Subtotal" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Columna 2: Tipo de Proveedor -->
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="Descuento" class="control-label">Descuento</label>
                            <input asp-for="Descuento" id="descuento" class="form-control" />
                            <span asp-validation-for="Descuento" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Columna 3: Proveedor -->
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="PrecioTotal" class="control-label">Precio Total</label>
                            <input asp-for="PrecioTotal" id="precioTotal" class="form-control" readonly />
                            <span asp-validation-for="PrecioTotal" class="text-danger"></span>
                        </div>
                    </div>
               
            </div>
            <div class="form-group mt-4">
                <button type="submit" class="btn btn-success">Crear</button>
                <a asp-action="Index" class="btn btn-secondary">Regresar</a>
            </div>
            
        </form>
    </div>
</div>
<style>
    .extra-options {
    position: absolute;
    margin-top: 5px;
    margin-left: 15px;
}
</style>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        var detalleIndex = 0;

        function agregarDetalle() {
            var insumo = $('#insumo').val();
            var insumoText = $('#insumo option:selected').text();
            var cantidad = $('#cantidad').val();
            var cantidadParaCalculo = cantidad.replace(',', '.'); // Reemplazar la coma por un punto solo para el cálculo
            var unidadMedida = $('#unidadMedida').val();
            var precioUnitario = $('#precioUnitario').val();
            var subtotal = 0;

            // Validar que los campos no estén vacíos y que se pueda calcular el subtotal
            if (insumo && cantidad && unidadMedida && precioUnitario) {
                subtotal = parseFloat(cantidadParaCalculo) * parseFloat(precioUnitario);
                subtotal = subtotal; // Formatear a dos decimales

                var nuevaFila = `
                            <tr>
                                <td>
                                    <input type="hidden" name="DetalleCompras[${detalleIndex}].IdInsumo" value="${insumo}" />
                                    ${insumoText}
                                </td>
                                <td>
                                    <input type="hidden" name="DetalleCompras[${detalleIndex}].Cantidad" value="${cantidad}" />
                                    ${cantidad} <!-- Mostrar la cantidad como la ingresó el usuario -->
                                </td>
                                <td>
                                    <input type="hidden" name="DetalleCompras[${detalleIndex}].UnidadMedida" value="${unidadMedida}" />
                                    ${unidadMedida}
                                </td>
                                <td>
                                    <input type="hidden" name="DetalleCompras[${detalleIndex}].PrecioUnitario" value="${precioUnitario}" />
                                    ${precioUnitario}
                                </td>
                                <td>
                                    ${subtotal} <!-- Mostrar el subtotal calculado -->
                                </td>
                                <td>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="eliminarFila(this)">Eliminar</button>
                                </td>
                            </tr>
                        `;

                $('#detallesTable tbody').append(nuevaFila);

                // Incrementar el índice para el próximo detalle
                detalleIndex++;

                // Limpiar los campos después de agregar
                $('#insumo').val('');
                $('#cantidad').val('');
                $('#unidadMedida').val('');
                $('#precioUnitario').val('');

                // Calcular el subtotal general y el precio total
                calcularSubtotalGeneral();
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Por favor, complete todos los campos antes de agregar el detalle.',
                });
            }
        }

        function eliminarFila(button) {
            var row = button.closest('tr');
            row.remove();

            // Actualizar el índice de los detalles
            $('#detallesTable tbody tr').each(function (index) {
                $(this).find('input').each(function () {
                    var name = $(this).attr('name');
                    var nuevoNombre = name.replace(/\[\d+\]/, `[${index}]`);
                    $(this).attr('name', nuevoNombre);
                });
            });

            detalleIndex = $('#detallesTable tbody tr').length;

            // Calcular el subtotal general y el precio total
            calcularSubtotalGeneral();
        }

        function calcularSubtotalGeneral() {
            var subtotalGeneral = 0;

            $('#detallesTable tbody tr').each(function () {
                var subtotal = $(this).find('td').eq(4).text();
                subtotalGeneral += parseFloat(subtotal);
            });

            // Actualizar el campo del subtotal
            $('#subtotal').val(subtotalGeneral);

            // Calcular el precio total
            calcularPrecioTotal();
        }

        function calcularPrecioTotal() {
            var subtotal = parseFloat($('#subtotal').val());
            var descuento = parseFloat($('#descuento').val()) || 0;
            var precioTotal = subtotal - descuento;
            $('#precioTotal').val(precioTotal);
        }

        $('#descuento').on('input', function () {
            calcularPrecioTotal();
        });

        function obtenerFechaHoy() {
            var hoy = new Date();
            var dia = hoy.getDate();
            var mes = hoy.getMonth() + 1;
            var año = hoy.getFullYear();

            if (dia < 10) dia = '0' + dia;
            if (mes < 10) mes = '0' + mes;

            return año + '-' + mes + '-' + dia;
        }

        function obtenerFechaLimite() {
            var hoy = new Date();
            hoy.setDate(hoy.getDate() - 5);
            var dia = hoy.getDate();
            var mes = hoy.getMonth() + 1;
            var año = hoy.getFullYear();

            if (dia < 10) dia = '0' + dia;
            if (mes < 10) mes = '0' + mes;

            return año + '-' + mes + '-' + dia;
        }

        $(document).ready(function () {
            var fechaHoy = obtenerFechaHoy();
            var fechaLimite = obtenerFechaLimite();

            $('#fechaCompra').attr('max', fechaHoy);
            $('#fechaCompra').attr('min', fechaLimite);
            $('#fechaCompra').val(fechaHoy);
           
        });

        $('#TipoProveedor').change(function () {
            var tipoProveedor = $(this).val();
            var proveedores = @Html.Raw(Json.Serialize(ViewBag.Proveedores));

            $('#IdProveedor').empty();

            var filteredProveedores = proveedores.filter(function (proveedor) {
                if (tipoProveedor === 'Natural') {
                    return proveedor.nombreCompleto != null && proveedor.nombreCompleto.trim() !== '';
                } else if (tipoProveedor === 'Jurídico') {
                    return proveedor.representanteLegal != null && proveedor.representanteLegal.trim() !== '';
                }
                return false;
            }).sort(function (a, b) {
                if (tipoProveedor === 'Natural') {
                    return a.nombreCompleto.localeCompare(b.nombreCompleto);
                } else if (tipoProveedor === 'Jurídico') {
                    return a.representanteLegal.localeCompare(b.representanteLegal);
                }
            });

            $.each(filteredProveedores, function (index, proveedor) {
                if (tipoProveedor === 'Natural') {
                    $('#IdProveedor').append($('<option>', {
                        value: proveedor.idProveedor,
                        text: proveedor.nombreCompleto
                    }));
                } else if (tipoProveedor === 'Jurídico') {
                    $('#IdProveedor').append($('<option>', {
                        value: proveedor.idProveedor,
                        text: proveedor.representanteLegal
                    }));
                }
            });

        });
        $(document).ready(function () {
            $('#createForm').on('submit', async function (event) {
                event.preventDefault(); // Evita el envío por defecto del formulario

                var isValid = true;

                // Validar Tipo de Proveedor
                if ($('#TipoProveedor').val() === '') {
                    Swal.fire({
                        title: 'Error',
                        text: 'Debes seleccionar un tipo de proveedor.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    isValid = false;
                }

                // Validar Proveedor
                if (isValid && $('#IdProveedor').val() === '') {
                    Swal.fire({
                        title: 'Error',
                        text: 'Debes seleccionar un proveedor.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    isValid = false;
                }

                // Validar Detalles de Compra
                if (isValid && $('#detallesTable tbody tr').length === 0) {
                    Swal.fire({
                        title: 'Error',
                        text: 'Debes agregar al menos un detalle de compra.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    isValid = false;
                }

                // Si la validación es exitosa, proceder con la solicitud AJAX
                if (isValid) {
                    var form = $(this);
                    var formData = form.serialize(); // Serializa los datos del formulario

                    $.ajax({
                        url: form.attr('action'),
                        type: 'POST',
                        data: formData,
                        success: function (response) {
                            Swal.fire({
                                title: 'Éxito',
                                text: 'La compra se ha creado correctamente.',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '@Url.Action("Index")'; // Redirige a la página de índice
                                }
                            });
                        },
                        error: function (xhr, status, error) {
                            Swal.fire({
                                title: 'Error',
                                text: 'Hubo un problema al crear la compra. Inténtalo nuevamente.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                }
            });
        });
    </script>
}


