@model fugaz_retro.Models.Compra

@{
    ViewData["Title"] = "Editar Compra";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="tbl">
    <h1>Editar Compra</h1>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="IdCompra" />

                <div class="form-group">
                    <label asp-for="IdProveedor" class="control-label">Proveedor</label>
                    <select asp-for="IdProveedor" class="form-control" asp-items="ViewBag.IdProveedor" disabled></select>
                    <span asp-validation-for="IdProveedor" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="FechaCompra" class="control-label">Fecha de Compra</label>
                    <input asp-for="FechaCompra" class="form-control" readonly />
                    <span asp-validation-for="FechaCompra" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Subtotal" class="control-label">Subtotal</label>
                    <input asp-for="Subtotal" class="form-control" id="subtotal" readonly />
                    <span asp-validation-for="Subtotal" class="text-danger"></span>
                </div>
@* 
                <div class="form-group">
                    <label asp-for="Iva" class="control-label">IVA</label>
                    <input asp-for="Iva" class="form-control" id="iva" readonly />
                    <span asp-validation-for="Iva" class="text-danger"></span>
                </div> *@

                <div class="form-group">
                    <label asp-for="Descuento" class="control-label">Descuento</label>
                    <input asp-for="Descuento" class="form-control" id="descuento" />
                    <span asp-validation-for="Descuento" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PrecioTotal" class="control-label">Precio Total</label>
                    <input asp-for="PrecioTotal" class="form-control" id="precioTotal" readonly />
                    <span asp-validation-for="PrecioTotal" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input type="submit" value="Guardar" class="btn btn-primary" />
                    <a asp-action="Index" class="btn btn-sm btn-secondary">Regresar</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const subtotalField = document.getElementById("subtotal");
            const descuentoField = document.getElementById("descuento");
            const ivaField = document.getElementById("iva");
            const precioTotalField = document.getElementById("precioTotal");

            subtotalField.addEventListener("input", function () {
                calcularIvaYTotal();
            });

            descuentoField.addEventListener("input", function () {
                calcularIvaYTotal();
            });

            function calcularIvaYTotal() {
                const subtotal = parseFloat(subtotalField.value) || 0;
                const descuento = parseFloat(descuentoField.value) || 0;
                const iva = subtotal * 0.19;
                const precioTotal = subtotal - descuento;

                ivaField.value = iva.toFixed(0); // Mostrar sin decimales
                precioTotalField.value = precioTotal.toFixed(0); // Mostrar sin decimales
            }
        });
    </script>

    <script>
        // Escuchar el evento submit del formulario
        document.querySelector('form').addEventListener('submit', function (event) {
            event.preventDefault(); // Evitar el envío del formulario por defecto

            // Realizar la petición AJAX para enviar los datos del formulario
            fetch(this.action, {
                method: this.method,
                body: new FormData(this)
            })
                .then(response => {
                    if (response.ok) {
                        // Mostrar alerta de éxito
                        Swal.fire({
                            icon: 'success',
                            title: '¡Éxito!',
                            text: 'La compra se ha editado correctamente.'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '@Url.Action("Index")';
                            }
                        });
                    } else {
                        // Si hay algún error, mostrar mensaje de error
                        Swal.fire({
                            icon: 'error',
                            title: '¡Error!',
                            text: 'Hubo un problema al editar la compra.'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });
    </script>
}
