@model fugaz_retro.Models.Pedido

@{
    ViewData["Title"] = "Crear";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="tbl">
    <h1>Crear Pedido</h1>
    <div class="container">
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="IdCliente" class="control-label">Nombre Cliente</label>
                        <select asp-for="IdCliente" class="form-control" asp-items="ViewBag.IdCliente"></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="MetodoPago" class="control-label">Método de Pago</label>
                        <select asp-for="MetodoPago" class="form-control" id="MetodoPago">
                            <option value="">Selecciona</option>
                            <option value="Efectivo">Efectivo</option>
                            <option value="Transferencia">Transferencia</option>
                        </select>
                        <span asp-validation-for="MetodoPago" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="tipoTransferenciaDiv" style="display: none;">
                        <label asp-for="TipoTransferencia" class="control-label">Tipo de Transferencia</label>
                        <select asp-for="TipoTransferencia" class="form-control" id="TipoTransferencia" name="TipoTransferencia">
                            <option value="">Tipo de Transferencia</option>
                            <option value="Nequi">Nequi</option>
                            <option value="Bancolombia">Bancolombia</option>
                            <option value="Daviplata">Daviplata</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Ciudad" class="control-label"></label>
                        <select asp-for="Ciudad" asp-items="ViewBag.Ciudades" class="form-control"></select>
                        <span asp-validation-for="Ciudad" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Direccion" class="control-label">Dirección</label>
                        <input asp-for="Direccion" class="form-control" />
                        <span asp-validation-for="Direccion" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="FechaPedido" class="control-label">Fecha del Pedido</label>
                        <input asp-for="FechaPedido" class="form-control" id="fechaPedido" type="date" />
                        <span asp-validation-for="FechaPedido" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="FechaEntrega" class="control-label">Fecha de Entrega</label>
                        <input asp-for="FechaEntrega" class="form-control" id="FechaEntrega" type="date" />
                        <span asp-validation-for="FechaEntrega" class="text-danger"></span>
                        <span id="FechaEntregaError" class="text-danger" style="display: none;">La fecha de entrega debe ser posterior a la fecha del pedido.</span>
                    </div>
                </div>
                <h4>Detalles del Pedido</h4>
                <table class="table" id="detallePedidosTable">
                    <thead>
                        <tr>
                            <th>Producto</th>
                            <th>Precio</th>
                            <th>Talla</th>
                            <th>Color</th>
                            <th>Cantidad</th>
                            <th>Subtotal</th>
                            <th>Acción</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <select class="form-control" id="detalleProductoSelect">
                                    <option value="">Seleccionar Producto</option>
                                    @foreach (var item in ViewBag.DetalleProductosNombre)
                                    {
                                        if (item.Value != null && item.Text != null)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    }
                                </select>
                            </td>
                            <td><input type="text" class="form-control" id="precioProducto" readonly /></td>
                            <td>
                                <select class="form-control" id="tallaProducto">
                                    <option value="">Seleccionar Talla</option>
                                    @foreach (var item in ViewBag.DetalleProductosTalla)
                                    {
                                        if (!string.IsNullOrEmpty(item.Value) && !string.IsNullOrEmpty(item.Text))
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    }
                                </select>
                            </td>
                            <td>
                                <select class="form-control" id="colorProducto">
                                    <option value="">Seleccionar Color</option>
                                    @foreach (var item in ViewBag.DetalleProductosColor)
                                    {
                                        if (!string.IsNullOrEmpty(item.Value) && !string.IsNullOrEmpty(item.Text))
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    }
                                </select>
                            </td>
                            <td><input type="number" class="form-control" id="cantidadProducto" /></td>
                            <td><input type="text" class="form-control" id="subtotalProducto" readonly /></td>
                            <td><button type="button" class="btn btn-primary" onclick="addDetallePedido()">Añadir</button></td>
                        </tr>
                    </tbody>
                </table>
                <div id="detallesPedidosHidden"></div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label asp-for="CostoPedido" class="control-label">Precio del Pedido</label>
                        <input asp-for="CostoPedido" id="CostoPedido" class="form-control" readonly />
                        <span asp-validation-for="CostoPedido" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="CostoEnvio" class="control-label">Precio de Envío</label>
                        <input asp-for="CostoEnvio" id="CostoEnvio" class="form-control" readonly />
                        <span asp-validation-for="CostoEnvio" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Descuento" class="control-label">Descuento</label>
                        <input asp-for="Descuento" id="Descuento" class="form-control" />
                        <span asp-validation-for="Descuento" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="TotalPedido" class="control-label">Total del Pedido</label>
                        <input asp-for="TotalPedido" id="TotalPedido" class="form-control" readonly />
                        <span asp-validation-for="TotalPedido" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="comprobantePagoDiv">
                        <label for="comprobantePago" class="control-label">Comprobante de Pago</label>
                        <input type="file" name="comprobantePago" id="comprobantePago" class="form-control" />
                        <span asp-validation-for="ComprobantePago" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-sm-6">
                    <img class="imgproduct" id="FotoPreview" src="#" alt="Comprobante de Pago" />
                </div>
                <style>
                    .form-group-botones {
                        margin-top: 20px;
                        margin-right: 10px;
                    }
                </style>

                <div class="form-group-botones">
                    <button type="submit" class="btn btn-success">Crear</button>
                    <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            $.getJSON('/Pedidos/GetProductNames', function (data) {
                if (data) {
                    var productSelect = $('#detalleProductoSelect');
                    productSelect.empty();
                    productSelect.append('<option value="">Seleccionar Producto</option>');
                    $.each(data, function (index, item) {
                        productSelect.append(`<option value="${item.idProducto}">${item.nombreProducto}</option>`);
                    });
                }
            });


            $('#MetodoPago').change(function () {
                var selectedValue = $(this).val();
                if (selectedValue === 'Transferencia') {
                    $('#tipoTransferenciaDiv').show();
                    $('#comprobantePagoDiv').show();
                } else {
                    $('#tipoTransferenciaDiv').hide();
                    $('#comprobantePagoDiv').hide();
                }
            });

            $('#detalleProductoSelect').change(function () {
                var idProducto = $(this).val();
                if (idProducto) {
                    $.getJSON('/Pedidos/GetProductDetails', { idProducto: idProducto }, function (data) {
                        if (data.success) {
                            $('#precioProducto').val(data.details.precioVenta);
                            var tallaSelect = $('#tallaProducto');
                            tallaSelect.empty();
                            tallaSelect.append('<option value="">Seleccionar Talla</option>');
                            $.each(data.details.detalles, function (index, item) {
                                if (item.talla) {
                                    tallaSelect.append(`<option value="${item.talla}">${item.talla}</option>`);
                                }
                            });

                            var colorSelect = $('#colorProducto');
                            colorSelect.empty();
                            colorSelect.append('<option value="">Seleccionar Color</option>');
                            $.each(data.details.detalles, function (index, item) {
                                if (item.color) {
                                    colorSelect.append(`<option value="${item.color}">${item.color}</option>`);
                                }
                            });
                        }
                    });
                } else {
                    $('#precioProducto').val('');
                    $('#tallaProducto').empty().append('<option value="">Seleccionar Talla</option>');
                    $('#colorProducto').empty().append('<option value="">Seleccionar Color</option>');
                }
            });

            $('#cantidadProducto').on('input', function () {
                var precio = parseFloat($('#precioProducto').val());
                var cantidad = parseInt($(this).val());
                if (!isNaN(precio) && !isNaN(cantidad) && cantidad > 0) {
                    var subtotal = precio * cantidad;
                    $('#subtotalProducto').val(subtotal);
                } else {
                    $('#subtotalProducto').val('');
                }
            });

            $('#FechaPedido, #FechaEntrega').change(function () {
                validarFechas();
            });

            function validarFechas() {
                var fechaPedido = new Date($('#FechaPedido').val());
                var fechaEntrega = new Date($('#FechaEntrega').val());
                if (fechaEntrega <= fechaPedido) {
                    $('#FechaEntregaError').show();
                } else {
                    $('#FechaEntregaError').hide();
                }
            }

            validarFechas();

            $('input[type="file"]').change(function (e) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#comprobantePreview').attr('src', e.target.result).show();
                }
                reader.readAsDataURL(this.files[0]);
            });
        });

        function addDetallePedido() {
            var idDetalleProducto = $('#detalleProductoSelect').val();
            var nombreProducto = $('#detalleProductoSelect option:selected').text();
            var precio = $('#precioProducto').val();
            var talla = $('#tallaProducto').val();
            var color = $('#colorProducto').val();
            var idDetalleInsumo = $('#detalleInsumoSelect').val();
            var nombreDetalleInsumo = $('#detalleInsumoSelect option:selected').text();
            var cantidad = $('#cantidadProducto').val();
            var subtotal = $('#subtotalProducto').val();

            if (idDetalleProducto && cantidad && subtotal) {
                var index = $('#detallePedidosTable tbody tr').length - 1;
                var detalleHtml = `
                                                                                        <tr>
                                                                                            <td>${nombreProducto}</td>
                                                                                            <td>${precio}</td>
                                                                                            <td>${talla}</td>
                                                                                            <td>${color}</td>
                                                                                            <td class="d-none">${nombreDetalleInsumo}</td>
                                                                                            <td>${cantidad}</td>
                                                                                            <td>${subtotal}</td>
                                                                                            <td><button type="button" class="btn btn-danger" onclick="removeDetallePedido(this)">Eliminar</button></td>
                                                                                        </tr>
                                                                                            <input type="hidden" name="detallesPedido[${index}].IdDetalleProducto" value="${idDetalleProducto}" />
                                                                                            <input type="hidden" name="detallesPedido[${index}].Precio" value="${precio}" />
                                                                                            <input type="hidden" name="detallesPedido[${index}].Talla" value="${talla}" />
                                                                                            <input type="hidden" name="detallesPedido[${index}].Color" value="${color}" />
                                                                                                    <input class="d-none" type="hidden" name="detallesPedido[${index}].IdDetalleInsumo" value="${idDetalleInsumo}" />
                                                                                            <input type="hidden" name="detallesPedido[${index}].Cantidad" value="${cantidad}" />
                                                                                            <input type="hidden" name="detallesPedido[${index}].Subtotal" value="${subtotal}" />

                                                                                    `;
                // $('#detallesPedidosHidden').append(detalleHtml);
                $('#detallePedidosTable tbody').append(detalleHtml);
                clearDetalleForm();
                calcularTotalPedido();
            } else {
                alert('Por favor, complete todos los campos del detalle del pedido.');
            }
        }

        function removeDetallePedido(button) {
            $(button).closest('tr').remove();
            calcularTotalPedido();
        }

        function clearDetalleForm() {
            $('#detalleProductoSelect').val('');
            $('#precioProducto').val('');
            $('#tallaProducto').empty().append('<option value="">Seleccionar Talla</option>');
            $('#colorProducto').empty().append('<option value="">Seleccionar Color</option>');
            $('#detalleInsumoSelect').val('');
            $('#cantidadProducto').val('');
            $('#subtotalProducto').val('');
        }

        function calcularTotalPedido() {
            var totalSubtotales = 0;
            $('#detallePedidosTable tbody tr').each(function () {
                var subtotal = parseFloat($(this).find('td:eq(6)').text());
                if (!isNaN(subtotal)) {
                    totalSubtotales += subtotal;
                }
            });

            $('#CostoPedido').val(totalSubtotales);

            var costoEnvio = parseFloat($('#CostoEnvio').val()) || 0;
            var descuento = parseFloat($('#Descuento').val()) || 0;
            var totalPedido = totalSubtotales + costoEnvio - descuento;

            $('#TotalPedido').val(totalPedido);
        }


        $('#CostoEnvio, #Descuento').on('input', calcularTotalPedido);
        $('#detallePedidosTable').on('DOMSubtreeModified', calcularTotalPedido);

        calcularTotalPedido();

        $('input[type="file"]').change(function (e) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#FotoPreview').attr('src', e.target.result).show();
            }
            reader.readAsDataURL(this.files[0]);
        });
        $(document).ready(function () {
            $('#MetodoPago').change(function () {
                var metodoPago = $(this).val();
                if (metodoPago === 'Transferencia' && 'Selecciona') {
                    $('#comprobantePagoDiv').show();
                    $('#tipoTransferenciaDiv').show();
                } else {
                    $('#comprobantePagoDiv').hide();
                    $('#tipoTransferenciaDiv').hide();
                }
            });
        });
       
        $(document).ready(function () {
            // Función para obtener la fecha de hoy en formato YYYY-MM-DD
            function obtenerFechaHoy() {
                var hoy = new Date();
                var dia = hoy.getDate();
                var mes = hoy.getMonth() + 1; 
                var año = hoy.getFullYear();

                if (dia < 10) dia = '0' + dia;
                if (mes < 10) mes = '0' + mes;

                return año + '-' + mes + '-' + dia;
            }

            // Función para obtener la fecha de hace 5 días en formato YYYY-MM-DD
            function obtenerFechaLimite() {
                var hoy = new Date();
                hoy.setDate(hoy.getDate() - 5);
                var dia = hoy.getDate();
                var mes = hoy.getMonth() + 1; // Los meses empiezan en 0
                var año = hoy.getFullYear();

                if (dia < 10) dia = '0' + dia;
                if (mes < 10) mes = '0' + mes;

                return año + '-' + mes + '-' + dia;
            }

            // Configurar el campo de fecha de pedido
            var fechaHoy = obtenerFechaHoy();
            var fechaLimite = obtenerFechaLimite();
            var $fechaPedido = $('#fechaPedido');

            // Establecer los valores min y max para el campo de fecha
            $fechaPedido.attr('max', fechaHoy); // La fecha máxima es hoy
            $fechaPedido.attr('min', fechaLimite); // La fecha mínima es 5 días antes
            $fechaPedido.val(fechaHoy); // Establecer la fecha actual como valor predeterminado

            var $fechaEntrega = $('#FechaEntrega');

            function actualizarFechaEntrega() {
                var fechaPedido = new Date($fechaPedido.val());
                var fechaMinEntrega = new Date(fechaPedido);
                fechaMinEntrega.setDate(fechaPedido.getDate() + 1); // La fecha de entrega mínima es al día siguiente

                var fechaMaxEntrega = new Date(fechaPedido);
                fechaMaxEntrega.setDate(fechaPedido.getDate() + 15); // La fecha de entrega máxima es 5 días después

                // Formatear las fechas para el input
                var minEntrega = fechaMinEntrega.toISOString().split('T')[0];
                var maxEntrega = fechaMaxEntrega.toISOString().split('T')[0];

                $fechaEntrega.attr('min', minEntrega);
                $fechaEntrega.attr('max', maxEntrega);
            }

            // Actualizar la fecha de entrega cuando cambie la fecha del pedido
            $fechaPedido.on('change', function () {
                actualizarFechaEntrega();
                validarFechas();
            });

            actualizarFechaEntrega();

            $fechaPedido.on('change', function () {
                actualizarFechaEntrega();
                validarFechas();
            });

            function validarFechas() {
                var fechaPedido = new Date($fechaPedido.val());
                var fechaEntrega = new Date($fechaEntrega.val());

                if (fechaEntrega < fechaPedido || fechaEntrega > new Date(fechaPedido.setDate(fechaPedido.getDate() + 15))) {
                    $('#FechaEntregaError').show();
                } else {
                    $('#FechaEntregaError').hide();
                }
            }

            $fechaEntrega.on('change', function () {
                validarFechas();
            });

            $('#Ciudad').change(function () {
                var ciudadSeleccionada = $(this).val();
                if (ciudadSeleccionada) {
                    $.getJSON('/Pedidos/GetShippingCost', { ciudad: ciudadSeleccionada }, function (data) {
                        if (data.success) {
                            $('#CostoEnvio').val(data.costoEnvio);
                            calcularTotalPedido();
                        } else {
                            $('#CostoEnvio').val(0);
                        }
                    });
                } else {
                    $('#CostoEnvio').val(0);
                }
            });

        });
    </script>
}
