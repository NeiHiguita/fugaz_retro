@model fugaz_retro.Models.Proveedor

@{
    ViewData["Title"] = "Crear Proveedor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="tbl">
    <h1>Crear Proveedor</h1>
    <hr />
    <div class="container">
        <form asp-action="Create" id="createForm">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="TipoProveedor" class="control-label">Tipo de Proveedor</label>
                        <select asp-for="TipoProveedor" class="form-control" id="tipoProveedorSelect" required>
                            <option value="">Selecciona tipo de proveedor</option>
                            <option value="Jurídico">Jurídico</option>
                            <option value="Natural">Natural</option>
                        </select>
                    </div>

                    <!-- Campos para Natural -->
                    <div id="camposNatural" style="display:none;">
                        <div class="form-group">
                            <label asp-for="NombreCompleto" class="control-label">Nombre Completo</label>
                            <input asp-for="NombreCompleto" class="form-control" id="NombreCompleto" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Documento" class="control-label">Documento</label>
                            <input asp-for="Documento" class="form-control" id="Documento" />
                        </div>
                    </div>

                    <!-- Campos para Jurídico -->
                    <div id="camposJuridico" style="display:none;">
                        <div class="form-group">
                            <label asp-for="Empresa" class="control-label">Empresa</label>
                            <input asp-for="Empresa" class="form-control" id="Empresa" />
                        </div>
                        <div class="form-group">
                            <label asp-for="RepresentanteLegal" class="control-label">Representante Legal</label>
                            <input asp-for="RepresentanteLegal" class="form-control" id="RepresentanteLegal" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Rut" class="control-label">Rut</label>
                            <input asp-for="Rut" class="form-control" id="Rut" />
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="DireccionAlternativa" class="control-label">Dirección</label>
                        <textarea asp-for="DireccionAlternativa" class="form-control" id="DireccionAlternativa" required></textarea>
                        <small class="form-text text-muted">
                            Diligencia la ubicación del proveedor
                        </small>
                    </div>

                    <!-- Fila para Teléfono y Celular -->
                    <div class="row">
                        <!-- Campo para Teléfono -->
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Telefono" class="control-label">Teléfono</label>
                                <input id="Telefono" class="form-control" placeholder="Número telefónico (7 dígitos)" />
                            </div>
                        </div>

                        <!-- Campo para Celular -->
                        <div class="col-md-8">
                            <div class="form-group">
                                <label for="TelefonoCelular" class="control-label">Celular</label>
                                <div class="input-group">
                                    <select id="PrefijoCelular" class="form-control" style="width: 20%; min-width: 80px;">
                                        <option value="">Prefijo</option>
                                        <option value="302">302</option>
                                        <option value="303">303</option>
                                        <option value="304">304</option>
                                        <option value="305">305</option>
                                        <option value="311">311</option>
                                        <option value="312">312</option>
                                        <option value="313">313</option>
                                        <option value="314">314</option>
                                        <option value="315">315</option>
                                        <option value="316">316</option>
                                        <option value="317">317</option>
                                        <option value="318">318</option>
                                        <option value="319">319</option>
                                        <option value="320">320</option>
                                        <option value="321">321</option>
                                        <option value="322">322</option>
                                    </select>
                                    <input id="Celular" class="form-control" style="flex: 1;" placeholder="Número celular (10 dígitos)" />
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Campo oculto para enviar el valor combinado -->
                    <input type="hidden" asp-for="Telefono" id="TelefonoCelular" />
                </div>
            </div>

            <style>
                input[type="checkbox"] {
                    transform: scale(1.2);
                    margin-right: 8px;
                }

                .form-group-botones {
                    margin-top: 20px;
                    margin-right: 10px;
                }
            </style>

            <div class="form-group-botones">
                <button type="submit" class="btn btn-success">Crear</button>
                <a asp-action="Index" class="btn btn-secondary">Regresar</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <!-- Agregar SweetAlert -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script>
        $(document).ready(function () {
            // Mostrar campos específicos según el tipo de proveedor seleccionado
            $('#tipoProveedorSelect').change(function () {
                const tipoProveedor = $(this).val();
                if (tipoProveedor === 'Natural') {
                    $('#camposNatural').show();
                    $('#camposJuridico').hide();
                } else if (tipoProveedor === 'Jurídico') {
                    $('#camposNatural').hide();
                    $('#camposJuridico').show();
                } else {
                    $('#camposNatural').hide();
                    $('#camposJuridico').hide();
                }
            });

            // Validación del RUT al salir del campo
            $('#Rut').blur(async function () {
                const rut = $(this).val();
                if (rut && (rut.length !== 9)) {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'El RUT debe tener exactamente 9 dígitos.'
                    });
                }
            });

            $('#Documento').blur(async function () {
                const documento = $(this).val();
                if (documento && documento.length !== 8 && documento.length !== 10) {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'El Documento debe tener exactamente 8 o 10 dígitos.'
                    });
                }
            });

            // Validación del formulario al enviar
            $('#createForm').on('submit', async function (e) {
                e.preventDefault(); // Evitar el envío predeterminado del formulario

                var tipoProveedor = $('#tipoProveedorSelect').val();

                if (!tipoProveedor) {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Debe seleccionar un tipo de proveedor.'
                    });
                    return; // Detener el proceso si no se selecciona un tipo de proveedor
                }

                if (tipoProveedor === 'Natural') {
                    if (!$('#NombreCompleto').val()) {
                        await Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Nombre completo es requerido.'
                        });
                        return; // Detener el proceso si el campo es requerido
                    }

                    if (!$('#Documento').val()) {
                        await Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Documento es requerido.'
                        });
                        return; // Detener el proceso si el campo es requerido
                    }
                }

                if (tipoProveedor === 'Jurídico') {
                    if (!$('#Empresa').val()) {
                        await Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Empresa es requerida.'
                        });
                        return; // Detener el proceso si el campo es requerido
                    }

                    if (!$('#RepresentanteLegal').val()) {
                        await Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Representante Legal es requerido.'
                        });
                        return; // Detener el proceso si el campo es requerido
                    }

                    if (!$('#Rut').val()) {
                        await Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Rut es requerido.'
                        });
                        return; // Detener el proceso si el campo es requerido
                    }
                }

                if (!$('#DireccionAlternativa').val()) {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Dirección es requerida.'
                    });
                    return; // Detener el proceso si el campo es requerido
                }

                var telefono = $('#Telefono').val();
                var celular = $('#Celular').val();
                var prefijoCelular = $('#PrefijoCelular').val();

                if (!telefono && (!celular || !prefijoCelular)) {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Debe ingresar al menos el teléfono o el celular.'
                    });
                    return; // Detener el proceso si ninguno de los campos tiene valor
                }

                // Combinar el teléfono y el celular
                if (celular && prefijoCelular) {
                    $('#TelefonoCelular').val(prefijoCelular + celular);
                } else if (telefono) {
                    $('#TelefonoCelular').val(telefono);
                }
                // Validación de longitud para teléfono
                if (telefono && telefono.length !== 7) {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'El teléfono debe tener exactamente 7 dígitos.'
                    });
                    return; // Detener el proceso si el teléfono no tiene la longitud correcta
                }

                // Validación de longitud para celular
                if (celular && (celular.length + prefijoCelular.length !== 10)) {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'El celular debe tener exactamente 10 dígitos, incluyendo el prefijo.'
                    });
                    return; // Detener el proceso si el celular no tiene la longitud correcta
                }

                // Enviar el formulario con AJAX
                var formData = $(this).serialize();

                try {
                    const response = await $.ajax({
                        type: 'POST',
                        url: $(this).attr('action'),
                        data: formData,
                        dataType: 'json'
                    });

                    if (response.success) {
                        await Swal.fire({
                            icon: 'success',
                            title: 'Éxito',
                            text: 'Proveedor registrado exitosamente.'
                        });

                        // Redireccionar después de mostrar el mensaje de éxito
                        window.location.href = response.redirectUrl;
                    } else {
                        await Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.errorMessage || 'Error al crear el proveedor.'
                        });
                    }
                } catch (error) {
                    console.error('Error al realizar la solicitud AJAX:', error);
                    await Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.message || 'Error al crear el proveedor.'
                    });
                }
            });
        });
    </script>
}

