@model IEnumerable<fugaz_retro.Models.Insumo>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Diccionario para mapear nombres de propiedades a nombres de encabezados deseados
    Dictionary<string, string> headerNames = new Dictionary<string, string>
    {
        { "NombreInsumo", "Nombre del Insumo" },
        { "Stock", "Stock" },
        { "Estado", "Estado" },
        { "PrecioUnitario", "Precio Unitario" },
        { "IdCategoriaNavigation.NombreCategoria", "Categoría" }
    };
}

<div class="tbl table-responsive">
    <h1>Insumos</h1>

    <div class="row mb-3">
        <div class="col">
            <a asp-action="Create" class="btn btn-success">Crear Nuevo <img src="/Images/agregar.png" height="24px" alt="Agregar" /></a>
        </div>
    </div>

    <table class="table table-striped table-bordered text-center" id="Table">
        <thead class="thead-dark">
            <tr>
                @foreach (var header in headerNames)
                {
                    <th>@header.Value</th>
                }
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var insumo in Model)
            {
                <tr>
                    @foreach (var header in headerNames)
                    {
                        <td>
                            @if (header.Key == "Stock")
                            {
                                @insumo.Stock
                            }
                            else if (header.Key == "PrecioUnitario")
                            {
                                @Html.Raw($"${insumo.PrecioUnitario:N0}")
                            }
                            else if (header.Key == "Estado")
                            {
                                @if (insumo.Stock > 3)
                                {
                                    <span class="text-success">Disponible</span>
                                }
                                else
                                {
                                    <span class="text-danger">Agotado</span>
                                }
                            }
                            else
                            {
                                @GetNestedPropertyValue(insumo, header.Key)
                            }
                        </td>
                    }
                    <td>
                        <a asp-action="Edit" asp-route-id="@insumo.IdInsumo" class="icon-link">
                            <i class="fas fa-pencil-alt" style="color: green; font-size: 22px"></i>
                        </a>
                        <a asp-action="Details" asp-route-id="@insumo.IdInsumo" class="icon-link">
                            <i class="fas fa-eye" style="color: #285d86; font-size: 22px"></i>
                        </a>
                        <a asp-action="Delete" asp-route-id="@insumo.IdInsumo" class="icon-link">
                            <i class="fas fa-trash-alt" style="color: #bf0808; font-size: 22px"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@functions {
    public string GetNestedPropertyValue(object obj, string propertyName)
    {
        var propertyNames = propertyName.Split('.');
        object propertyValue = obj;

        foreach (var name in propertyNames)
        {
            var property = propertyValue.GetType().GetProperty(name);
            if (property != null)
            {
                propertyValue = property.GetValue(propertyValue);

                // Check if the property value is null before accessing nested property
                if (propertyValue == null)
                {
                    return string.Empty; // Return empty string if property is null
                }
            }
            else
            {
                return string.Empty;
            }
        }

        return propertyValue?.ToString();
    }
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" crossorigin="anonymous" />
<link rel="stylesheet" href="~/css/site.css" />
@section Scripts {

}