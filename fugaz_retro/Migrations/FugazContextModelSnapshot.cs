// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fugaz_retro.Models;

#nullable disable

namespace fugaz_retro.Migrations
{
    [DbContext(typeof(FugazContext))]
    partial class FugazContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.CategoriaInsumo", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool>("EstadoCategoria")
                        .HasColumnType("bit")
                        .HasColumnName("estado_categoria");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre_categoria");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__CD54BC5A65CCC751");

                    b.ToTable("Categoria_Insumo", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ciudad");

                   

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("documento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("phone");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("telefono");

                    b.HasKey("IdCliente")
                        .HasName("PK__Cliente__677F38F58BFA1E98");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_compra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<double?>("Descuento")
                        .HasColumnType("float")
                        .HasColumnName("descuento");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("date")
                        .HasColumnName("fecha_compra");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<double>("Iva")
                        .HasColumnType("float")
                        .HasColumnName("iva");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("metodo_pago");

                    b.Property<double>("PrecioTotal")
                        .HasColumnType("float")
                        .HasColumnName("precio_total");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float")
                        .HasColumnName("subtotal");

                    b.HasKey("IdCompra")
                        .HasName("PK__Compra__C4BAA60461F0D5E6");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.DetalleCompra", b =>
                {
                    b.Property<int>("IdDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_compra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleCompra"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int")
                        .HasColumnName("id_compra");

                    b.Property<int?>("IdInsumo")
                        .HasColumnType("int")
                        .HasColumnName("id_insumo");

                    b.HasKey("IdDetalleCompra")
                        .HasName("PK__Detalle___BD16E279ABE746F9");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdInsumo");

                    b.ToTable("Detalle_Compra", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.DetallePedido", b =>
                {
                    b.Property<int>("IdDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_pedido");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetallePedido"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdPedido")
                        .HasColumnType("int")
                        .HasColumnName("id_pedido");

                    b.Property<int?>("IdDetalleProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_producto");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float")
                        .HasColumnName("precio_unitario");

                    b.Property<double>("Subtotal")
                       .HasColumnType("float")
                       .HasColumnName("subtotal");

                    b.HasKey("IdDetallePedido")
                        .HasName("PK__Detalle___C08768CF39E5F374");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdDetalleProducto");

                    b.ToTable("Detalle_Pedido", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.Insumo", b =>
                {
                    b.Property<int>("IdInsumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_insumo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInsumo"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descripcion");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    b.Property<string>("NombreInsumo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_insumo");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float")
                        .HasColumnName("precio_unitario");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("unidad_medida");

                    b.HasKey("IdInsumo")
                        .HasName("PK__Insumo__D4F202B193BC63C8");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Insumo", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pedido");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<double>("CostoEnvio")
                        .HasColumnType("float")
                        .HasColumnName("costo_envio");

                    b.Property<double>("CostoPedido")
                        .HasColumnType("float")
                        .HasColumnName("costo_pedido");

                    b.Property<double>("Descuento")
                        .HasColumnType("float")
                        .HasColumnName("descuento");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("date")
                        .HasColumnName("fecha_entrega");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("date")
                        .HasColumnName("fecha_pedido");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<double>("Iva")
                        .HasColumnType("float")
                        .HasColumnName("iva");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("metodo_pago");

                   

                    b.Property<double>("TotalPedido")
                        .HasColumnType("float")
                        .HasColumnName("total_pedido");

                    b.HasKey("IdPedido")
                        .HasName("PK__Pedido__6FF01489E3A55BCA");

                    b.HasIndex("IdCliente");


                    b.HasIndex("IdUsuario");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.PerdidaInsumo", b =>
                {
                    b.Property<int>("IdPerdidaInsumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_perdida_insumo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerdidaInsumo"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("unidad_medida");

                    b.HasKey("IdPerdidaInsumo")
                        .HasName("PK__Perdida___49FE1C56F8B3D1F3");

                    b.HasIndex("Idinsumo");

                    b.ToTable("Perdida_Insumo", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_permiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<bool>("EstadoPermiso")
                        .HasColumnType("bit")
                        .HasColumnName("estado_permiso");

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nombre_permiso");

                    b.HasKey("IdPermiso")
                        .HasName("PK__Permisos__228F224F4D60E8D9");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("fugaz_retro.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("color");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("foto");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_producto");

                    b.Property<double>("PrecioVenta")
                        .HasColumnType("float")
                        .HasColumnName("precio_venta");

                    b.Property<string>("Talla")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("talla");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__FF341C0D503CEFA9");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("direccion");

                    b.Property<string>("Documento")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("documento");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("nombre_completo");

                    b.Property<int?>("Rut")
                        .HasColumnType("int")
                        .HasColumnName("rut");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("telefono");

                    b.Property<string>("TipoProveedor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tipo_proveedor");

                    b.HasKey("IdProveedor")
                        .HasName("PK__Proveedo__8D3DFE284BF63AE3");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.RolPermiso", b =>
                {
                    b.Property<int>("IdRolPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_rol_permiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRolPermiso"));

                    b.Property<int?>("IdPermiso")
                        .HasColumnType("int")
                        .HasColumnName("id_permiso");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.HasKey("IdRolPermiso")
                        .HasName("PK__Rol_Perm__BA448703B40BBE2A");

                    b.HasIndex("IdPermiso");

                    b.HasIndex("IdRol");

                    b.ToTable("Rol_Permiso", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.Role", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));


                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre_rol");

                    b.HasKey("IdRol")
                        .HasName("PK__Roles__6ABCB5E059F1FCBB");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("fugaz_retro.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<int>("Contraseña")
                        .HasColumnType("int")
                        .HasColumnName("contraseña");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("correo");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("date")
                        .HasColumnName("date_register");

                    b.Property<string>("Document")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("document");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<int?>("IdRolPermiso")
                        .HasColumnType("int")
                        .HasColumnName("id_rol_permiso");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre_usuario");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__4E3E04AD9CC295B8");

                    b.HasIndex("IdRolPermiso");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("fugaz_retro.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<int?>("IdPedido")
                        .HasColumnType("int")
                        .HasColumnName("id_pedido");

                
                    b.HasKey("IdVenta")
                        .HasName("PK__Ventas__459533BFC72708FB");

                    b.HasIndex("IdPedido");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fugaz_retro.Models.Compra", b =>
                {
                    b.HasOne("fugaz_retro.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK__Compra__id_prove__4E88ABD4");

                    b.HasOne("fugaz_retro.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Compra__id_usuar__4D94879B");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("fugaz_retro.Models.DetalleCompra", b =>
                {
                    b.HasOne("fugaz_retro.Models.Compra", "IdCompraNavigation")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("FK__Detalle_C__id_co__5165187F");

                    b.HasOne("fugaz_retro.Models.Insumo", "IdInsumoNavigation")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("IdInsumo")
                        .HasConstraintName("FK__Detalle_C__id_in__52593CB8");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdInsumoNavigation");
                });

            modelBuilder.Entity("fugaz_retro.Models.DetallePedido", b =>
                {
                    b.HasOne("fugaz_retro.Models.Pedido", "IdPedidoNavigation")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("FK__Detalle_P__id_pe__5BE2A6F2");

                    b.HasOne("fugaz_retro.Models.Producto", "IdProductoNavigation")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__Detalle_P__id_pr__5CD6CB2B");

                    b.Navigation("IdPedidoNavigation");

                    b.Navigation("IdProductoNavigation");
                });

        

            modelBuilder.Entity("fugaz_retro.Models.Insumo", b =>
                {
                    b.HasOne("fugaz_retro.Models.CategoriaInsumo", "IdCategoriaNavigation")
                        .WithMany("Insumos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK__Insumo__id_categ__48CFD27E");

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("fugaz_retro.Models.Pedido", b =>
                {
                    b.HasOne("fugaz_retro.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK__Pedido__id_clien__5629CD9C");

                   

                    b.HasOne("fugaz_retro.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Pedido__id_usuar__5535A963");

                    b.Navigation("IdClienteNavigation");


                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("fugaz_retro.Models.PerdidaInsumo", b =>
                {
                    b.HasOne("fugaz_retro.Models.insumo", "IdinsumoNavigation")
                        .WithMany("PerdidaInsumos")
                        .HasForeignKey("Idinsumo")
                        .HasConstraintName("FK__Perdida_I__id_in__2A164134");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("fugaz_retro.Models.RolPermiso", b =>
                {
                    b.HasOne("fugaz_retro.Models.Permiso", "IdPermisoNavigation")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdPermiso")
                        .HasConstraintName("FK__Rol_Permi__id_pe__3C69FB99");

                    b.HasOne("fugaz_retro.Models.Role", "IdRolNavigation")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Rol_Permi__id_ro__3B75D760");

                    b.Navigation("IdPermisoNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("fugaz_retro.Models.Usuario", b =>
                {
                    b.HasOne("fugaz_retro.Models.RolPermiso", "IdRolPermisoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRolPermiso")
                        .HasConstraintName("FK__Usuario__id_rol___3F466844");

                    b.Navigation("IdRolPermisoNavigation");
                });

            modelBuilder.Entity("fugaz_retro.Models.Venta", b =>
                {
                    b.HasOne("fugaz_retro.Models.Pedido", "IdPedidoNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("FK__Ventas__id_pedid__6383C8BA");

                    b.Navigation("IdPedidoNavigation");

                });

            modelBuilder.Entity("fugaz_retro.Models.CategoriaInsumo", b =>
                {
                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("fugaz_retro.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("fugaz_retro.Models.Compra", b =>
                {
                    b.Navigation("DetalleCompras");
                });


            modelBuilder.Entity("fugaz_retro.Models.Insumo", b =>
                {
                    b.Navigation("DetalleCompras");
                });

            modelBuilder.Entity("fugaz_retro.Models.Pedido", b =>
                {
                    b.Navigation("DetallePedidos");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("fugaz_retro.Models.Permiso", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("fugaz_retro.Models.Producto", b =>
                {
                   
                    b.Navigation("PerdidaInsumos");
                });
            modelBuilder.Entity("fugaz_retro.Models.DetalleProducto", b =>
            {
                b.Navigation("DetallePedidos");

            });

            modelBuilder.Entity("fugaz_retro.Models.Proveedor", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("fugaz_retro.Models.RolPermiso", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("fugaz_retro.Models.Role", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("fugaz_retro.Models.Usuario", b =>
                {
                    b.Navigation("Compras");


                    b.Navigation("Pedidos");

               
                });
#pragma warning restore 612, 618
        }
    }
}
